--DragonHub
--By Toothless The Night Fury#9772
--Dont Skid My Shit Skids

getgenv().autoTap = false;
getgenv().autoRebirth = false;
getgenv().autoBuyEgg = false;
getgenv().autoBuyRobuxEgg = false;
getgenv().autoClaimRandomReward = false;
getgenv().autoUpgradeRebirths = false;
getgenv().autoGemMultiplierUpgrade = false;
getgenv().autojumps = false;
getgenv().autoStorageUpgrade = false;
getgenv().ClaimRankReward = false;
getgenv().ClaimDailyReward = false;
getgenv().UseTripleTap = false;
getgenv().UseDoubleLuckBoost = false;
getgenv().UseTripleLuckBoost = false;
getgenv().thisvalue = 'my name';



function doTap()
    spawn(function()
        while autoTap == true do
            game:GetService("ReplicatedStorage").Events.Tap:FireServer()
            task.wait()
        end
    end)
end

function autoRebirth(selectedRebirth)
    spawn(function()
        while wait() do
            if not getgenv().autoRebirth then break end
                local args = {
                    [1] = selectedRebirth}
            game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
        end
    end)
end

function autoegg(selectedEgg)
    spawn(function()
        while wait() do
            if not getgenv().autoBuyEgg then break end
            local args = {
                [1] = {},
                [2] = selectedEgg,
                [3] = 1}
            game:GetService("ReplicatedStorage").Events.HatchEgg:InvokeServer(unpack(args))
        end
    end)
end

function autoclaimrandomreward()
    spawn(function()
        while wait(1) do
            game:GetService("ReplicatedStorage").Events.ClaimRandomReward:FireServer()
        end
    end)
end

function autoclaimrandomreward()
    spawn(function()
        while wait(1) do
            game:GetService("ReplicatedStorage").Events.ClaimRandomReward:FireServer()
        end
    end)
end

function autoRebirthUpgrade()
    spawn(function()
        while wait(1) do
            local args = {
                [1] = "rebirthUpgrades"}
            game:GetService("ReplicatedStorage").Events.Upgrade:FireServer(unpack(args))
        end
    end)
end

function autoGemMultiplierUpgrade()
    spawn(function()
        while wait(2) do
            local args = {
                [1] = "gemMultiplierUpgrade"}
            game:GetService("ReplicatedStorage").Events.Upgrade:FireServer(unpack(args))
        end
    end)
end

function autojumps()
    spawn(function()
        while wait(2) do
            local args = {
                [1] = "jumps"}
            game:GetService("ReplicatedStorage").Events.Upgrade:FireServer(unpack(args))
        end
    end)
end

function autoStorageUpgrade()
    spawn(function()
        while wait(2) do
            local args = {
                [1] = "storageUpgrade"}
            game:GetService("ReplicatedStorage").Events.Upgrade:FireServer(unpack(args))
        end
    end)
end

--Rewards
function ClaimRankReward()
    spawn(function()
        while wait(1) do
            game:GetService("ReplicatedStorage").Events.ClaimRankReward:FireServer()
        end
    end)
end

function ClaimDailyReward()
    spawn(function()
        while wait(1) do
            game:GetService("ReplicatedStorage").Events.OpenDailyReward:InvokeServer()
        end
    end)
end

--Boosts
function UseTripleTap()
    spawn(function()
        while wait(1) do
            local args = {
                [1] = "tripleTaps"}
            game:GetService("ReplicatedStorage").Events.UseBoost:FireServer(unpack(args))
        end
    end)
end

function UseDoubleLuckBoost()
    spawn(function()
        while wait(1) do
            local args = {
                [1] = "doubleLuck"}
            game:GetService("ReplicatedStorage").Events.UseBoost:FireServer(unpack(args))
        end
    end)
end

function UseTripleLuckBoost()
    spawn(function()
        while wait(1) do
            local args = {
                [1] = "tripleLuck"}
            game:GetService("ReplicatedStorage").Events.UseBoost:FireServer(unpack(args))
        end
    end)
end

function unlockPortals()
	forestTP()
	wait(4)
	flowerTP()
	wait(4)
	swampTP()
	wait(4)
	snowTP()
	wait(4)
	desertTP()
	wait(4)
	deathTP()
	wait(4)
	beachTP()
	wait(4)
	minesTP()
	wait(4)
	cloudsTP()
	wait(4)
	coralTP()
	wait(4)
	darkheartTP()
	wait(4)
	flamelandsTP()
	wait(4)
	moltenTP()
	wait(4)
	blueMagmaTP()
	wait(4)
	purpleMagmaTP()
	wait(4)
	yellowMagmaTP()
	wait(4)
	redMagmaTP()
	wait(4)
	fantasyTP()
	wait(4)
	mysticMireTP()
	wait(4)
	castleTP()
	wait(4)
	candyTP()
	wait(4)
	festivalTP()
	wait(4)
	japaneseTP()
	wait(4)
	spaceTP()
	wait(4)
	frostSpaceTP()
	wait(4)
	toxicSpaceTP()
	wait(4)
	asteroidSpaceTP()
	end

	function spawnTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-292.965424, 23.2814751, -423.599396, 0.087131694, 0, -0.996196806, 0, 1, 0, 0.996196806, 0, 0.087131694))
	end

	function forestTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-163.984467, 987.596497, -403.339417, 1, 0, 0, 0, 1, 0, 0, 0, 1))
	end

	function flowerTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-179.51564, 1524.63098, -682.498718, -1, 0, -0, -0, 1, -0, -0, 0, -1))
	end

	function swampTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-264.358887, 2123.06299, -694.661316, -1, 0, -0, -0, 1, -0, -0, 0, -1))
	end

	function snowTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-201.771973, 2944.48169, -470.408752, 0, 0, 1, 0, 1, 0, -1, 0, 0))
	end

	function desertTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-166.285156, 4235.38916, -779.153137, 0, 0, 1, 0, 1, 0, -1, 0, 0))
	end

	function deathTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-276.201263, 5425.62158, -480.287781, 0, 0, 1, 0, 1, 0, -1, 0, 0))
	end

	function beachTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-140.345093, 6881.63086, -495.682129, 0, 0, 1, 0, 1, 0, -1, 0, 0))
	end

	function minesTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-243.258667, 8376.5166, -483.889771, 0, 0, 1, 0, 1, 0, -1, 0, 0))
	end

	function cloudsTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-253.303482, 11262.8818, -237.888596, 0, 0, 1, 0, 1, 0, -1, 0, 0))
	end

	function coralTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-511.021118, 13812.0322, -543.241821, 0, 0, -1, 0, 1, -0, 1, 0, -0))
	end

	function darkheartTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(-408.69751, 17180.1387, -552.046448, 0, 0, 1, 0, 1, 0, -1, 0, 0))
	end

	function flamelandsTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1137.61401, 170.300522, -2859.72534, 0, 0, -1, 0, 1, -0, 1, 0, -0))
	end

	function moltenTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1280.59583, 2193.82812, -2885.14429, 0, 0, 1, 0, 1, 0, -1, 0, 0))
	end

	function blueMagmaTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1401.12939, 5240.41943, -2953.91968, 0, 0, 1, 0, 1, 0, -1, 0, 0))
	end

	function purpleMagmaTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1319.70276, 7662.0249, -2958.05762, 0, 0, 1, 0, 1, 0, -1, 0, 0))
	end

	function yellowMagmaTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1403.54407, 10404.0977, -2903.13843, -0.707131207, 0, 0.707082391, 0, 1.00000012, 0, -0.707082391, 0, -0.707131207))
	end

	function redMagmaTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1426.21277, 13353.7031, -2900.90088, -0.707131207, 0, 0.707082391, 0, 1.00000012, 0, -0.707082391, 0, -0.707131207))
	end

	function fantasyTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1415.12451, 169.644089, -5604.4707, 0, 0, 1, 0, 1, 0, -1, 0, 0))
	end

	function mysticMireTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1205.41235, 2037.73022, -5585.4043, 0, 0, -1, 0, 1, -0, 1, 0, -0))
	end

	function castleTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1216.91406, 5124.03027, -5632.3999, 0, 0, -1, 0, 1, -0, 1, 0, -0))
	end

	function candyTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1179.67749, 8660.72852, -5587.80518, 0, 0, -1, 0, 1, -0, 1, 0, -0))
	end

	function festivalTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1227.37744, 12284.5283, -5571.9043, 0, 0, -1, 0, 1, -0, 1, 0, -0))
	end

	function japaneseTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1189.67773, 16327.543, -5569.50635, 0, 0, -1, 0, 1, -0, 1, 0, -0))
	end

	function spaceTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1172.01929, 147.044098, -7965.72852, 0, 0, -1, 0, 1, -0, 1, 0, -0))
	end

	function frostSpaceTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1289.57776, 1874.82812, -7965.40625, 0, 0, -1, 0, 1, -0, 1, 0, -0))
	end

	function toxicSpaceTP()
	game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1285.47778, 4960.92285, -7961.20605, 0, 0, -1, 0, 1, -0, 1, 0, -0))
   end

    function asteroidSpaceTP()
		game.ReplicatedStorage.Events.Teleport:FireServer(CFrame.new(1347.32776, 9598.83594, -7961.65625, 0, 0, -1, 0, 1, -0, 1, 0, -0))
	end



print('Night Fury Dragon Hub :)')

local selectedEgg

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("DragonHub")

local b = w:CreateFolder("Farming")

local c = w:CreateFolder("Eggs")

local e = w:CreateFolder("Upgrades")

local f = w:CreateFolder("Boosts")

local g = w:CreateFolder("Misc")

local h = w:CreateFolder("unlockPortals")

local i = w:CreateFolder("Destory GUI")

i:DestroyGui()


b:Toggle("Auto Tap",function(bool)
    getgenv().autoTap = bool
    print('Auto Tap is: ', bool);
    if bool then
        doTap();
    end
end)

b:Toggle("Auto Rebirth",function(bool)
    getgenv().autoRebirth = bool
    print("Auto Rebirth is: ", bool)
    if bool then
        autoRebirth(selectedRebirth)
    end
end)

b:Toggle("Auto ClaimRandomReward",function (bool)
    getgenv().autoClaimRandomReward = bool
    print("Auto Claim is: ", bool)
    if bool then
        autoclaimrandomreward()
    end
end)

b:Toggle("Auto ClaimRankReward",function (bool)
    getgenv().ClaimRankReward = bool
    print("Auto Claim is: ", bool)
    if bool then
        ClaimRankReward()
    end
end)

b:Toggle("Auto ClaimDailyReward",function (bool)
    getgenv().ClaimDailyReward = bool
    print("Auto Claim is: ", bool)
    if bool then
        ClaimDailyReward()
    end
end)

b:Dropdown("Rebirth",{"1","5","10", "20", "100", "500", "4000", "13500", "32000", "62500", "75000", "108000", "125000", "171500", "256000", "350000", "364500", "500000", "750000", "1000000", "2000000","1000000000","1000000000000","100000000000000"},true,function(value)
    selectedRebirth = value
    print(value)
end)

c:Toggle("Auto Buy Egg",function(bool)
    getgenv().autoBuyEgg = bool
    print('Auto Tap is: ', bool);
    if bool then
        autoegg(selectedEgg);
    end
end)

c:Dropdown("Egg",{"Starter","Wood Egg","Jungle Egg","Forest Egg","Bee Egg","Swamp Egg","Snow Egg","Desert Egg","Death Egg","Beach Egg","Mine Egg","Cloud Egg","Coral Egg","Dark Egg","Fire Egg","Underworld Egg","Molten Egg","Magma Egg","Blue Magma Egg","Purple Magma Egg","Yellow Magma Egg","Red Magma Egg","Holy Egg","Holy Wood Egg","Holy Bee Egg","Flora Egg","Flora Egg","Castle Egg","Candy Egg","Festival Egg","Japan Egg","Frost Alien Egg","Toxic Alien Egg","Jack o Lantern","Hydra Jack o Lantern","Vesta","Empyreus Pumpkin","Skeleton Mage","Pumpkin Egg","60M Egg"},true,function(value) --true/false, replaces the current title "Dropdown" with the option that t
    selectedEgg = value
    print(value)
end)

e:Toggle("Auto Rebirth Upgrade",function(bool)
    getgenv().autoRebirthUpgrade = bool
    print('Auto Tap is: ', bool);
    if bool then
        autoRebirthUpgrade();
    end
end)

e:Toggle("Auto Gem Multiplier Upgrade",function(bool)
    getgenv().autoGemMultiplierUpgrade = bool
    print('Auto Tap is: ', bool);
    if bool then
        autoGemMultiplierUpgrade();
    end
end)


e:Toggle("Auto Storage Upgrade",function(bool)
    getgenv().autoStorageUpgrade = bool
    print('Auto Tap is: ', bool);
    if bool then
        autoStorageUpgrade();
    end
end)

e:Toggle("Auto jumps",function(bool)
    getgenv().autojumps = bool
    print('Auto Tap is: ', bool);
    if bool then
        autojumps();
    end
end)

f:Toggle("UseTripleTap",function(bool)
    getgenv().UseTripleTap = bool
    print('Auto Tap is: ', bool);
    if bool then
        UseTripleTap();
    end
end)

f:Toggle("UseDoubleLuckBoost",function(bool)
    getgenv().UseDoubleLuckBoost = bool
    print('Auto Tap is: ', bool);
    if bool then
        UseDoubleLuckBoost();
    end
end)

f:Toggle("UseTripleLuckBoost",function(bool)
    getgenv().UseTripleLuckBoost = bool
    print('Auto Tap is: ', bool);
    if bool then
        UseTripleLuckBoost();
    end
end)

g:Button("Simple inf Jump",function()
        local InfiniteJumpEnabled = true
        game:GetService("UserInputService").JumpRequest:connect(function()
        if InfiniteJumpEnabled then
            game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
        end
    end)
end)

h:Button("unlockPortals",function()
    getgenv().unlockPortals = true
    print('Auto Tap is: ', true);
    if true then
        unlockPortals();
    end
end)
